<Window x:Class="SIL.Cog.Presentation.Views.SegmentMappingsChartDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:c="clr-namespace:SIL.Cog.Presentation.Controls"
        xmlns:vm="clr-namespace:SIL.Cog.Application.ViewModels;assembly=SIL.Cog.Application"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:v="clr-namespace:SIL.Cog.Presentation.Views"
        xmlns:cnvtrs="clr-namespace:SIL.Cog.Presentation.Converters"
        xmlns:b="clr-namespace:SIL.Cog.Presentation.Behaviors"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance vm:SegmentMappingsChartViewModel}" b:WindowBehaviors.CloseOnDefaultButtonClick="True"
        Title="{Binding Title}" DataContextChanged="OnDataContextChanged" WindowStartupLocation="CenterOwner" ShowInTaskbar="False" Loaded="OnLoaded" Height="600" Width="800">
    <Window.Resources>
        <Style x:Key="CheckmarkPathStyle" TargetType="Path">
            <Setter Property="Data" Value="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " />
            <Setter Property="Stretch" Value="None" />
            <Setter Property="Fill" Value="ForestGreen" />
        </Style>
        <BooleanToVisibilityConverter x:Key="BoolConverter" />
        <cnvtrs:InvertedBooleanToVisibilityConverter x:Key="ReverseBoolConverter" />
    </Window.Resources>
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="262" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <xcdg:DataGridControl Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2" x:Name="SegmentsDataGrid" SelectionUnit="Cell" EditTriggers="CellIsCurrent" SelectionChanged="SegmentsDataGrid_OnSelectionChanged">
            <xcdg:DataGridControl.Resources>
                <DataTemplate x:Key="SegmentPairTemplate" DataType="{x:Type vm:SegmentMappingsChartSegmentPairViewModel}">
                    <StackPanel Name="stackPanel" Orientation="Horizontal" Height="29" Width="29">
                        <Viewbox Width="{Binding Path=ActualWidth, ElementName=stackPanel}" Height="{Binding Path=ActualHeight, ElementName=stackPanel}">
                            <Button Name="button" Command="{Binding ToggleMappingCommand}" IsEnabled="{Binding IsEnabled}">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Button.Template>
                                <Grid x:Name="markGrid" Margin="1">
                                    <Path x:Name="mappedMark" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0" Style="{StaticResource CheckmarkPathStyle}" />
                                    <TextBlock x:Name="indefiniteMappedMark" Foreground="ForestGreen" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" FontWeight="Bold" Opacity="0">?</TextBlock>
                                </Grid>
                            </Button>
                        </Viewbox>
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                            <Setter TargetName="stackPanel" Property="Background" Value="LightGray" />
                            <Setter TargetName="button" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding MappingState}" Value="DefiniteListMapped">
                            <Setter TargetName="mappedMark" Property="Opacity" Value="1" />
                            <Setter TargetName="indefiniteMappedMark" Property="Opacity" Value="0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding MappingState}" Value="IndefiniteListMapped">
                            <Setter TargetName="mappedMark" Property="Opacity" Value="0" />
                            <Setter TargetName="indefiniteMappedMark" Property="Opacity" Value="1" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding MappingState}" Value="ThresholdMapped">
                            <Setter TargetName="mappedMark" Property="Fill" Value="#FF212121" />
                            <Setter TargetName="mappedMark" Property="Opacity" Value="1" />
                            <Setter TargetName="indefiniteMappedMark" Property="Opacity" Value="0" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:SegmentMappingsChartSegmentViewModel}">
                    <TextBlock Text="{Binding StrRep}" FontSize="15" TextOptions.TextFormattingMode="Display" />
                </DataTemplate>
                <Style TargetType="xcdg:ColumnManagerCell" BasedOn="{StaticResource {x:Type xcdg:ColumnManagerCell}}">
                    <Setter Property="Padding" Value="0,2,0,2" />
                    <Setter Property="FontSize" Value="15" />
                    <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                </Style>
                <Style TargetType="xcdg:DataCell" BasedOn="{StaticResource {x:Type xcdg:DataCell}}">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                </Style>
            </xcdg:DataGridControl.Resources>
            <xcdg:DataGridControl.DefaultCellEditors>
                <xcdg:CellEditor x:Key="{x:Type vm:SegmentMappingsChartSegmentPairViewModel}" EditTemplate="{StaticResource SegmentPairTemplate}" />
            </xcdg:DataGridControl.DefaultCellEditors>
            <xcdg:DataGridControl.View>
                <xcdg:TableView FixedColumnCount="1" IsColumnVirtualizationEnabled="False">
                    <xcdg:TableView.FixedHeaders>
                        <DataTemplate>
                            <c:MergedHeadersPanel />
                        </DataTemplate>
                        <DataTemplate>
                            <xcdg:ColumnManagerRow AllowColumnReorder="False" AllowColumnResize="False" AllowSort="False" />
                        </DataTemplate>
                    </xcdg:TableView.FixedHeaders>
                </xcdg:TableView>
            </xcdg:DataGridControl.View>
        </xcdg:DataGridControl>
        <Border Grid.Column="2" Grid.Row="0" BorderThickness="0,1,1,1" BorderBrush="{StaticResource ListBorderBrush}" Padding="5">
            <HeaderedContentControl Header="Segment pair">
                <Grid>
                    <StackPanel Visibility="{Binding IsSegmentPairSelected, Converter={StaticResource BoolConverter}}">
                        <v:SegmentMappingsChartSegmentPairView DataContext="{Binding SelectedSegmentPair}" />
                    </StackPanel>
                    <TextBlock Visibility="{Binding IsSegmentPairSelected, Converter={StaticResource ReverseBoolConverter}}" FontSize="15">No segment pair selected.</TextBlock>
                </Grid>
            </HeaderedContentControl>
        </Border>
        <Border Grid.Column="2" Grid.Row="1" BorderThickness="0,0,1,1" BorderBrush="{StaticResource ListBorderBrush}" Padding="5">
            <HeaderedContentControl Header="Legend" Height="150">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Path Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" Margin="1,5,0,1" Style="{StaticResource CheckmarkPathStyle}" />
                    <TextBlock Grid.Column="1" Grid.Row="0">=</TextBlock>
                    <TextBlock Grid.Column="2" Grid.Row="0" TextWrapping="Wrap"> manually specified as similar</TextBlock>
                    <Path Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" Fill="#FF212121" Margin="1,5,0,1" Style="{StaticResource CheckmarkPathStyle}" />
                    <TextBlock Grid.Column="1" Grid.Row="1">=</TextBlock>
                    <TextBlock Grid.Column="2" Grid.Row="1" TextWrapping="Wrap"> meets the phonetic distance threshold to be considered similar</TextBlock>
                    <TextBlock Grid.Column="0" Grid.Row="2" Foreground="ForestGreen" HorizontalAlignment="Center" FontSize="12" FontWeight="Bold">?</TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="2">=</TextBlock>
                    <TextBlock Grid.Column="2" Grid.Row="2" TextWrapping="Wrap"> manually specified as similar in certain environments</TextBlock>
                    <TextBlock Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="3" TextWrapping="Wrap" Margin="0,5,0,0">Click in a selected cell to manually specify a correspondence as similar.</TextBlock>
                </Grid>
            </HeaderedContentControl>
        </Border>
        <Label Grid.Column="0" Grid.Row="2" Target="{Binding ElementName=ThresholdUpDown}" Padding="0,0,0,5" Margin="0,5,5,5">Distance threshold:</Label>
        <xctk:IntegerUpDown Grid.Column="1" Grid.Row="2" Margin="0,5,5,5" Name="ThresholdUpDown" Value="{Binding Threshold, UpdateSourceTrigger=PropertyChanged}"
                            Increment="100" Minimum="0" Width="75" HorizontalAlignment="Left" />
        <StackPanel Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Right">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="5,0,0,0" />
                    <Setter Property="Width" Value="70" />
                </Style>
            </StackPanel.Resources>
            <Button IsDefault="True">OK</Button>
            <Button IsCancel="True">Cancel</Button>
        </StackPanel>
    </Grid>
</Window>
