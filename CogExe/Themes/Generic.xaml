<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:v="clr-namespace:SIL.Cog.Views"
                    xmlns:c="clr-namespace:SIL.Cog.Controls" xmlns:cnvtrs="clr-namespace:SIL.Cog.Converters">
	<cnvtrs:LevelToIndentConverter x:Key="LevelToIndentConverter"/>

	<SolidColorBrush x:Key="TextBrush" Color="#FF10257F" />
	<SolidColorBrush x:Key="DataGridHeaderBrush" Color="#FFCFDDF0" />
	<SolidColorBrush x:Key="DataGridBorderBrush" Color="#FF88B0E4" />
	<SolidColorBrush x:Key="DataGridSelectedBrush" Color="#FFFCE8AA" />
	<SolidColorBrush x:Key="DataGridMouseOverBrush" Color="#FFFFF8E2" />
	<SolidColorBrush x:Key="DataGridSelectedInactiveBrush" Color="#FFDDDDDD" />
	<SolidColorBrush x:Key="AlternatingRowBrush" Color="#FFF6FAFD" />

	<Style TargetType="HeaderedContentControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="HeaderedContentControl">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Grid.Row="0" />
						<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Row="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HeaderTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border BorderBrush="Silver" BorderThickness="0,0,0,1" Margin="0,0,0,5">
						<TextBlock Foreground="{StaticResource TextBrush}" FontWeight="Bold" Text="{TemplateBinding ContentControl.Content}" />
					</Border>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Hyperlink">
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Foreground" Value="Blue" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="DataGrid">
		<Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}" />
		<Setter Property="Background" Value="White" />
		<Setter Property="RowBackground" Value="White" />
		<Setter Property="AlternatingRowBackground" Value="{StaticResource AlternatingRowBrush}" />
		<Setter Property="HorizontalGridLinesBrush" Value="LightGray" />
		<Setter Property="VerticalGridLinesBrush" Value="LightGray" />
		<Setter Property="v:DataGridBehaviors.SelectAllButtonStyle">
			<Setter.Value>
				<Style TargetType="Button">
					<Setter Property="Command" Value="{x:Null}" />
					<Setter Property="IsEnabled" Value="False" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="Button">
								<Border x:Name="Border" BorderBrush="{StaticResource DataGridBorderBrush}" BorderThickness="0,0,1,1" Background="{StaticResource DataGridHeaderBrush}" VerticalAlignment="Stretch" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DataGrid_ColumnHeaderThumbStyle" TargetType="Thumb">
		<Setter Property="Width" Value="8" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Cursor" Value="SizeWE" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Thumb">
					<Border Padding="{TemplateBinding Padding}" Background="Transparent">
						<Border Padding="0,2,0,2">
							<Rectangle HorizontalAlignment="Center" Width="2" Fill="{TemplateBinding Background}" />
						</Border>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DataGrid_RowHeaderThumbStyle" TargetType="Thumb">
		<Setter Property="Height" Value="8" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Cursor" Value="SizeNS" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Thumb">
					<Border Padding="{TemplateBinding Padding}" Background="Transparent">
						<Border Padding="2,0,2,0">
							<Rectangle VerticalAlignment="Center" Height="2" Fill="{TemplateBinding Background}" />
						</Border>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DataGrid_ArrowStyle" TargetType="Polygon">
		<Setter Property="Grid.Column" Value="1" />
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="VerticalAlignment" Value="Bottom" />
		<Setter Property="StrokeThickness" Value="1" />
		<Setter Property="Stroke" Value="Black" />
		<Setter Property="Fill" Value="Gray" />
		<Setter Property="Visibility" Value="Hidden" />
	</Style>

	<Style TargetType="DataGridColumnHeader">
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="Background" Value="{StaticResource DataGridHeaderBrush}" />
		<Setter Property="Padding" Value="8,2,8,2" />
		<Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}" />
		<Setter Property="BorderThickness" Value="0,0,1,1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="DataGridColumnHeader">
					<Grid>
						<Border Name="HeaderBorder" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
                                                    BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="12" />
								</Grid.ColumnDefinitions>
								<ContentPresenter Grid.Column="0" Name="HeaderContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}" />
								<Polygon Name="UpArrow" Style="{StaticResource DataGrid_ArrowStyle}" Margin="0,0,0,2" Points="0,0 8,0 4,-6 0,0" />
								<Polygon Name="DownArrow" Margin="0,0,0,1" Style="{StaticResource DataGrid_ArrowStyle}" Points="0,0 8,0 4,5 0,0" />
							</Grid>
						</Border>
						<Thumb x:Name="PART_LeftHeaderGripper" Style="{StaticResource DataGrid_ColumnHeaderThumbStyle}" Margin="-4,0,0,0" HorizontalAlignment="Left" />
						<Thumb x:Name="PART_RightHeaderGripper" Style="{StaticResource DataGrid_ColumnHeaderThumbStyle}" Margin="0,0,-4,0" HorizontalAlignment="Right" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="SortDirection" Value="Ascending">
							<Setter TargetName="UpArrow" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="SortDirection" Value="Descending">
							<Setter TargetName="DownArrow" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="CanUserSort" Value="False">
							<Setter TargetName="HeaderContent" Property="Grid.ColumnSpan" Value="2" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="DataGridRowHeader">
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="Background" Value="{StaticResource DataGridHeaderBrush}" />
		<Setter Property="Padding" Value="8,2,8,2" />
		<Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}" />
		<Setter Property="BorderThickness" Value="0,0,1,1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="DataGridRowHeader">
					<Grid>
						<Border Name="HeaderBorder" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
                                                      BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
							<ContentPresenter Name="HeaderContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                        ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        Content="{TemplateBinding Content}" />
						</Border>
						<Thumb x:Name="PART_TopHeaderGripper" Style="{StaticResource DataGrid_RowHeaderThumbStyle}" Margin="0,-4,0,0" VerticalAlignment="Top" />
						<Thumb x:Name="PART_BottomHeaderGripper" Style="{StaticResource DataGrid_RowHeaderThumbStyle}" Margin="0,0,0,-4" VerticalAlignment="Bottom" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="DataGridCell">
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True" >
				<Setter Property="BorderBrush" Value="{StaticResource DataGridMouseOverBrush}" />
				<Setter Property="Background" Value="{StaticResource DataGridMouseOverBrush}" />
			</Trigger>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Foreground" Value="Black" />
				<Setter Property="BorderBrush" Value="{StaticResource DataGridSelectedBrush}" />
				<Setter Property="Background" Value="{StaticResource DataGridSelectedBrush}" />
			</Trigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Value="Cell" />
					<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
					<Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="False" />
				</MultiDataTrigger.Conditions>
				<Setter Property="BorderBrush" Value="{StaticResource DataGridSelectedInactiveBrush}" />
				<Setter Property="Background" Value="{StaticResource DataGridSelectedInactiveBrush}" />
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Value="FullRow" />
					<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
					<Condition Binding="{Binding Path=(v:UIElementBehaviors.IsFocusWithin), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="False" />
				</MultiDataTrigger.Conditions>
				<Setter Property="BorderBrush" Value="{StaticResource DataGridSelectedInactiveBrush}" />
				<Setter Property="Background" Value="{StaticResource DataGridSelectedInactiveBrush}" />
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Value="Cell" />
					<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
					<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<Setter Property="Foreground" Value="Black" />
				<Setter Property="BorderBrush" Value="{StaticResource DataGridSelectedBrush}" />
				<Setter Property="Background" Value="{StaticResource DataGridSelectedBrush}" />
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Value="FullRow" />
					<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
					<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<Setter Property="Foreground" Value="Black" />
				<Setter Property="BorderBrush" Value="{StaticResource DataGridSelectedBrush}" />
				<Setter Property="Background" Value="{StaticResource DataGridSelectedBrush}" />
			</MultiDataTrigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="DataGridRow">
		<Setter Property="v:UIElementBehaviors.EnableIsFocusWithin" Value="True" />
		<Style.Triggers>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Value="FullRow" />
					<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<Setter Property="Background" Value="{StaticResource DataGridMouseOverBrush}" />
			</MultiDataTrigger>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{StaticResource DataGridSelectedBrush}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="True" />
					<Condition Property="v:UIElementBehaviors.IsFocusWithin" Value="False" />
				</MultiTrigger.Conditions>
				<Setter Property="Background" Value="{StaticResource DataGridSelectedInactiveBrush}" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="True" />
					<Condition Property="IsMouseOver" Value="True" />
				</MultiTrigger.Conditions>
				<Setter Property="Background" Value="{StaticResource DataGridSelectedBrush}" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="Scroll">
		<Setter Property="UIElement.Focusable" Value="False" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<DockPanel Margin="{TemplateBinding Padding}">
							<ScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Focusable="false">
								<GridViewHeaderRowPresenter Margin="0"
															Columns="{Binding Path=Columns,RelativeSource={RelativeSource AncestorType={x:Type c:TreeListView}}}"
															SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</ScrollViewer>
							<ScrollContentPresenter Name="PART_ScrollContentPresenter"
													KeyboardNavigation.DirectionalNavigation="Local"
													Content="{TemplateBinding Content}"
													ContentTemplate="{TemplateBinding ContentTemplate}"
													CanContentScroll="{TemplateBinding CanContentScroll}"
													SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</DockPanel>
						<ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Minimum="0.0" Maximum="{TemplateBinding ScrollableWidth}"
								   ViewportSize="{TemplateBinding ViewportWidth}" Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
								   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow"/>
						<ScrollBar Name="PART_VerticalScrollBar" Orientation="Vertical" Grid.Column="1" Minimum="0.0" Maximum="{TemplateBinding ScrollableHeight}"
								   ViewportSize="{TemplateBinding ViewportHeight}" Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
								   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow"/>
						<DockPanel Grid.Column="1" Grid.Row="1" Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}" LastChildFill="false">
							<Rectangle DockPanel.Dock="Left" Width="1" Fill="White" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
							<Rectangle DockPanel.Dock="Top" Height="1" Fill="White" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
						</DockPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="c:TreeListView">
		<Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}" />
		<Setter Property="Background" Value="White" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Foreground" Value="#FF042271" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<!-- Style="{StaticResource scroll}"-->
				<ControlTemplate TargetType="c:TreeListView">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<ScrollViewer Style="{StaticResource Scroll}" Background="{TemplateBinding Background}" Focusable="false" CanContentScroll="false"
									  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
									  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Padding="{TemplateBinding Padding}"
									  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="Panel.Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

	<Style TargetType="c:TreeListViewItem">
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style TargetType="IFrameworkInputElement">
					<Style.Resources>
						<ResourceDictionary />
					</Style.Resources>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle RadiusY="2" Stroke="#8E6EA6F5" RadiusX="2" StrokeThickness="1" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="#00FFFFFF" />
		<Setter Property="BorderBrush" Value="#00FFFFFF" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Margin" Value="0,0,0,1" />
		<Setter Property="Padding" Value="5,2,5,2" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="c:TreeListViewItem">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>

						<Border x:Name="item" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2,2,2,2" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition MaxHeight="11" />
									<RowDefinition />
								</Grid.RowDefinitions>
								<c:TreeGridViewRowPresenter x:Name="PART_Header" Grid.RowSpan="2"
																	FirstColumnIndent="{Binding Level,Converter={StaticResource LevelToIndentConverter},RelativeSource={RelativeSource AncestorType={x:Type c:TreeListViewItem}},ConverterParameter=16}"
																	Content="{TemplateBinding Header}" 
																	Columns="{Binding Path=Columns,RelativeSource={RelativeSource AncestorType={x:Type c:TreeListView}}}">
									<c:TreeGridViewRowPresenter.Expander>
										<Grid>
											<ToggleButton Height="16" Width="16" ClickMode="Press" Name="Expander" IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource AncestorType={x:Type c:TreeListViewItem}}}">
												<ToggleButton.Style>
													<Style TargetType="ToggleButton">
														<Style.Resources>
															<ResourceDictionary />
														</Style.Resources>
														<Setter Property="Focusable" Value="False" />
														<Setter Property="Width" Value="16" />
														<Setter Property="Height" Value="16" />
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="ToggleButton">
																	<Border Height="16" Width="16" Background="#00FFFFFF" Padding="5,5,5,5">
																		<Path Fill="#00FFFFFF" Name="ExpandPath" Stroke="#FF989898">
																			<Path.Data>
																				<PathGeometry Figures="M0,0L0,6L6,0z" />
																			</Path.Data>
																			<Path.RenderTransform>
																				<RotateTransform CenterX="3" Angle="135" CenterY="3" />
																			</Path.RenderTransform>
																		</Path>
																	</Border>
																	<ControlTemplate.Triggers>
																		<Trigger Property="IsMouseOver" Value="True">
																			<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA" />
																			<Setter Property="Fill" TargetName="ExpandPath" Value="#00FFFFFF" />
																		</Trigger>
																		<Trigger Property="IsChecked" Value="True">
																			<Setter Property="RenderTransform" TargetName="ExpandPath">
																				<Setter.Value>
																					<RotateTransform CenterX="3" Angle="180" CenterY="3" />
																				</Setter.Value>
																			</Setter>
																			<Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959" />
																			<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626" />
																		</Trigger>
																	</ControlTemplate.Triggers>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</ToggleButton.Style>
											</ToggleButton>
										</Grid>
									</c:TreeGridViewRowPresenter.Expander>
								</c:TreeGridViewRowPresenter>
							</Grid>
						</Border>
						<ItemsPresenter Grid.Row="1" Name="ItemsHost" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TreeViewItem.IsExpanded" Value="False">
							<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="False">
							<Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
						</Trigger>

						<Trigger Property="IsMouseOver" SourceName="item" Value="True" >
							<Setter Property="Background" TargetName="item" Value="{StaticResource DataGridMouseOverBrush}" />
							<Setter Property="BorderBrush" TargetName="item" Value="{StaticResource DataGridMouseOverBrush}" />
						</Trigger>
						<Trigger Property="TreeViewItem.IsSelected" Value="True">
							<Setter Property="Background" TargetName="item" Value="{StaticResource DataGridSelectedBrush}" />
							<Setter Property="BorderBrush" TargetName="item" Value="{StaticResource DataGridSelectedBrush}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="TreeViewItem.IsSelected" Value="True" />
								<Condition Property="TreeViewItem.IsSelectionActive" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="item" Value="{StaticResource DataGridSelectedInactiveBrush}" />
							<Setter Property="BorderBrush" TargetName="item" Value="{StaticResource DataGridSelectedInactiveBrush}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="item" Value="{StaticResource DataGridSelectedBrush}" />
							<Setter Property="BorderBrush" TargetName="item" Value="{StaticResource DataGridSelectedBrush}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" TargetName="item" Value="{DynamicResource SystemColors.GrayTextBrushKey}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="GridViewColumnHeader">
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="Background" Value="{StaticResource DataGridHeaderBrush}" />
		<Setter Property="Padding" Value="8,2,8,2" />
		<Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}" />
		<Setter Property="BorderThickness" Value="0,0,1,1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewColumnHeader">
					<Grid>
						<Border Name="HeaderBorder" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
                                                    BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="12" />
								</Grid.ColumnDefinitions>
								<ContentPresenter Grid.Column="0" Name="HeaderContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}" />
							</Grid>
						</Border>
						<Thumb x:Name="PART_HeaderGripper" Style="{StaticResource DataGrid_ColumnHeaderThumbStyle}" Margin="0,0,-4,0" HorizontalAlignment="Right" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ListBox">
		<Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}" />
	</Style>

	<Style TargetType="ListBoxItem">
		<Style.Resources>
			<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FFFCE8AA" />
			<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
		</Style.Resources>
	</Style>

	<Style TargetType="TextBox">
		<Setter Property="Validation.ErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<DockPanel LastChildFill="true">
						<Border Background="Red" DockPanel.Dock="right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10"
                                ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
							<TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center" FontWeight="Bold" Foreground="white" />
						</Border>
						<AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
							<Border BorderBrush="Red" BorderThickness="1" />
						</AdornedElementPlaceholder>
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="v:TextBoxBehaviors.IsDirtyEnabled" Value="True" />
		<Style.Triggers>
			<Trigger Property="v:TextBoxBehaviors.ShowErrorTemplate" Value="False">
				<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>